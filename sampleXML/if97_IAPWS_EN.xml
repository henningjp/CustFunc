<?xml version="1.0" encoding="UTF-8"?>
<!-- Custom Function file for the CoolProp/IF97 wrapper Add-in to Mathcad found at https://github.com/CoolProp/IF97 -->
<!-- To use, place this XML file in the Mathcad Prime installation directory under "Custom Functions/docs/".        -->
<!-- THIS FILE IS TO BE USED IF IF97 WAS COMPILED WITH THE "IAPWS_UNITS" DEFINITION.  OTHERWISE USE if97_SI_EN.xml. -->
<FUNCTIONS>
	<!-- Below are the entries for the if97 saturation curve functions -->
  <function>
    <name>tsatp</name>
    <local_name>if97_tsatp</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates saturated temperature [K] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>psatt</name>
    <local_name>if97_psatt</local_name>
    <params>T</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates saturated pressure [MPa] as a function of temperature, T [K].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>tcrit</name>
    <local_name>if97_tcrit</local_name>
    <params>0</params>
    <category>IF97 (Water Properties)</category>
    <description>Returns the saturated temperature [K] at the critial point. A dummy parameter must be provided (e.g. 0).</description>
  </function>
  <function>
    <name>ttrip</name>
    <local_name>if97_ttrip</local_name>
    <params>0</params>
    <category>IF97 (Water Properties)</category>
    <description>Returns the saturated temperature [K] at the triple point. A dummy parameter must be provided (e.g. 0).</description>
  </function>
  <function>
    <name>pcrit</name>
    <local_name>if97_pcrit</local_name>
    <params>0</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates saturated pressure [MPa] at the critial point. A dummy parameter must be provided (e.g. 0).</description>
  </function>
  <function>
    <name>ptrip</name>
    <local_name>if97_ptrip</local_name>
    <params>0</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates saturated pressure [MPa] at the triple point. A dummy parameter must be provided (e.g. 0).</description>
  </function>
  <function>
    <name>t23</name>
    <local_name>if97_t23</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates Temperature [K] along the Region 2/3 boundary as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>p23</name>
    <local_name>if97_p23</local_name>
    <params>T</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates Pressure [MPa] along the Region 2/3 boundary as a function of temperature, T [K].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <!-- Below are the entries for the basic if97 thermodynamic functions -->
  <function>
    <name>vtp</name>
    <local_name>if97_vtp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the specific volume [m³/kg] as a function of T [K] and p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>rhotp</name>
    <local_name>if97_rhotp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the mass density [kg/m³] as a function of T [K] and p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>htp</name>
    <local_name>if97_htp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the mass enthalpy [kJ/kg] as a function of T [K] and p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>utp</name>
    <local_name>if97_utp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the mass internal energy [kJ/kg] as a function of T [K] and p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>stp</name>
    <local_name>if97_stp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the mass entropy [kJ/kg-K] as a function of T [K] and p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>cptp</name>
    <local_name>if97_cptp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the isobaric specific heat [kJ/kg-K] as a function of T [K] and p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>cvtp</name>
    <local_name>if97_cvtp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the isochoric specific heat [kJ/kg-K] as a function of T [K] and p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>wtp</name>
    <local_name>if97_wtp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the speed of sound [m/s] as a function of T [K] and p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <!-- Below are the entries for the thermodynamic if97 saturated liquid/vapor functions -->
  <function>
    <name>vf</name>
    <local_name>if97_vf</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated liquid specific volume [m³/kg] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>vg</name>
    <local_name>if97_vg</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated vapor specific volume [m³/kg] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>rhof</name>
    <local_name>if97_rhof</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated liquid density [kg/m³] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>rhog</name>
    <local_name>if97_rhog</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated vapor density [kg/m³] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>hf</name>
    <local_name>if97_hf</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated liquid enthalpy [kJ/kg] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>hg</name>
    <local_name>if97_hg</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated vapor enthalpy [kJ/kg] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>uf</name>
    <local_name>if97_uf</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated liquid internal energy [kJ/kg] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>ug</name>
    <local_name>if97_ug</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated vapor internal energy [kJ/kg] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>sf</name>
    <local_name>if97_sf</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated liquid entropy [kJ/kg-K] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>sg</name>
    <local_name>if97_sg</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated vapor entropy [kJ/kg-K] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>cpf</name>
    <local_name>if97_cpf</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated liquid isobaric specific heat [kJ/kg-K] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>cpg</name>
    <local_name>if97_cpg</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated vapor isobaric specific heat [kJ/kg-K] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>cvf</name>
    <local_name>if97_cvf</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated liquid isochoric specific heat [kJ/kg-K] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>cvg</name>
    <local_name>if97_cvg</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated vapor isochoric specific heat [kJ/kg-K] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>wf</name>
    <local_name>if97_wf</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated liquid speed of sound [m/s] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>wg</name>
    <local_name>if97_wg</local_name>
    <params>p</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the saturated vapor speed of sound [m/s] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <!-- Below are the entries for the if97 transport functions -->
  <function>
      <name>mutp</name>
      <local_name>if97_mutp</local_name>
      <params>T,p</params>
      <category>IF97 (Water Properties)</category>
      <description>Calculates the viscosity [μPa-s] as a function of T [K] and p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>muf</name>
      <local_name>if97_muf</local_name>
      <params>p</params>
      <category>IF97 (Water Properties)</category>
      <description>Calculates the saturated liquid viscosity [μPa-s] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>mug</name>
      <local_name>if97_mug</local_name>
      <params>p</params>
      <category>IF97 (Water Properties)</category>
      <description>Calculates the saturated vapor viscosity [μPa-s] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>ktp</name>
      <local_name>if97_ktp</local_name>
      <params>T,p</params>
      <category>IF97 (Water Properties)</category>
      <description>Calculates the thermal conductivity [W/m-K] as a function of T [K] and p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>kf</name>
      <local_name>if97_kf</local_name>
      <params>p</params>
      <category>IF97 (Water Properties)</category>
      <description>Calculates the saturated liquid thermal conductivity [W/m-K] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>kg</name>
      <local_name>if97_kg</local_name>
      <params>p</params>
      <category>IF97 (Water Properties)</category>
      <description>Calculates the saturated vapor thermal conductivity [W/m-K] as a function of pressure, p [MPa].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>sigma</name>
      <local_name>if97_sigma</local_name>
      <params>T</params>
      <category>IF97 (Water Properties)</category>
      <description>Calculates the surface tension [N/m] as a function of temperature, T [K].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <!-- Below are the entries for the reverse if97 functions -->
  <function>
      <name>tph</name>
      <local_name>if97_tph</local_name>
      <params>p,h</params>
      <category>IF97 (Water Properties)</category>
      <description>Calculates the temperature, T [K], as a function of p [MPa] and mass enthalpy, h, [kJ/kg].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>tps</name>
    <local_name>if97_tps</local_name>
    <params>p,s</params>
    <category>IF97 (Water Properties)</category>
    <description>Calculates the temperature, T [K], as a function of p [MPa] and mass entropy, s, [kJ/kg-K].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>ths</name>
      <local_name>if97_ths</local_name>
      <params>h,s</params>
      <category>IF97 (Water Properties)</category>
      <description>Calculates the temperature, T [K], as a function of mass enthalpy, h [kJ/kg], and mass entropy, s [kJ/kg-K].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>phs</name>
      <local_name>if97_phs</local_name>
      <params>h,s</params>
      <category>IF97 (Water Properties)</category>
      <description>Calculates the pressure, p [MPa], as a function of mass enthalpy, h [kJ/kg], and mass entropy, s [kJ/kg-K].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>hmax</name>
    <local_name>if97_hmax</local_name>
    <params>s</params>
    <category>IF97 (Water Properties)</category>
    <description>Obtains Enthalpy, h [J/kg], values along the Pmax and Tmax boundaries as a function of Entropy, s [J/kg-K].  This function is used internally for bounds checking of reverse functions without iteration, but is provided for verificastion purposes.\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>hmin</name>
    <local_name>if97_hmin</local_name>
    <params>s</params>
    <category>IF97 (Water Properties)</category>
    <description>Obtains Enthalpy, h [J/kg], values along the Pmin Boundary as a function of Entropy, s [J/kg-K].  This function is used internally for bounds checking of reverse functions without iteration, but is provided for verificastion purposes.\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>hsats</name>
    <local_name>if97_hsats</local_name>
    <params>s</params>
    <category>IF97 (Water Properties)</category>
    <description>Obtains Enthalpy, h [J/kg], values along the saturation curves as a function of Entropy, s [J/kg-K]. This is a unified function that covers the 4 saturation curve segments around the vapor dome, based on the value of s. This function is used internally for bounds checking of reverse functions without iteration, but is provided for verificastion purposes.\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>h13</name>
    <local_name>if97_h13</local_name>
    <params>s</params>
    <category>IF97 (Water Properties)</category>
    <description>Obtains Enthalpy [J/kg] values Region 1-3 boundary as a function of Entropy [J/kg-K].  This function is used internally for bounds checking of reverse functions without iteration, but is provided for verificastion purposes.\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
    <name>h2ab</name>
    <local_name>if97_h2ab</local_name>
    <params>s</params>
    <category>IF97 (Water Properties)</category>
    <description>Obtains Enthalpy [J/kg] values Region 2a-2b boundary (const. p = 4 [MPa]) as a function of Entropy [J/kg-K].  This function is used internally for bounds checking of reverse functions without iteration, but is provided for verificastion purposes.\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <!-- Below are the entries for if97 utility functions -->
  <function>
      <name>getvers</name>
      <local_name>if97_getvers</local_name>
      <params>0</params>
      <category>IF97 (Water Properties)</category>
      <description>Returns the version of the IF97 implementation code. Takes a "dummy" parameter that can be (0).</description>
  </function>
  <function>
      <name>xph</name>
      <local_name>if97_xph</local_name>
      <params>p, h</params>
      <category>IF97 (Water Properties)</category>
      <description>Returns the steam quality, x, as a function of pressure, p [MPa], and mass enthalpy, h [kJ/kg].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>xps</name>
      <local_name>if97_xps</local_name>
      <params>p,s</params>
      <category>IF97 (Water Properties)</category>
      <description>Returns the steam quality, x, as a function of pressure, p [MPa], and mass entropy, s [kJ/kg-K].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>xpu</name>
      <local_name>if97_xpu</local_name>
      <params>p,u</params>
      <category>IF97 (Water Properties)</category>
      <description>Returns the steam quality, x, as a function of pressure, p [MPa], and mass internal energy, u [kJ/kg].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>xpv</name>
      <local_name>if97_xpv</local_name>
      <params>p,v</params>
      <category>IF97 (Water Properties)</category>
      <description>Returns the steam quality, x, as a function of pressure, p [MPa], and specific volume, v [m³/kg].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>xprho</name>
      <local_name>if97_xprho</local_name>
      <params>p,ρ</params>
      <category>IF97 (Water Properties)</category>
      <description>Returns the steam quality, x, as a function of pressure, p [MPa], and mass density, ρ [kg/m³].\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>hpx</name>
      <local_name>if97_hpx</local_name>
      <params>p,x</params>
      <category>IF97 (Water Properties)</category>
      <description>Returns the mass enthalpy, h [kJ/kg], as a function of pressure, p [MPa], and steam quality, x, within the vapor dome.\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>spx</name>
      <local_name>if97_spx</local_name>
      <params>p,x</params>
      <category>IF97 (Water Properties)</category>
      <description>Returns the mass entropy, s [kJ/kg-K], as a function of pressure, p [MPa], and steam quality, x, within the vapor dome.\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>upx</name>
      <local_name>if97_upx</local_name>
      <params>p,x</params>
      <category>IF97 (Water Properties)</category>
      <description>Returns the mass internal engergy, u [kJ/kg], as a function of pressure, p [MPa], and steam quality, x, within the vapor dome.\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>vpx</name>
      <local_name>if97_vpx</local_name>
      <params>p,x</params>
      <category>IF97 (Water Properties)</category>
      <description>Returns the specific volume, v [m³/kg], as a function of pressure, p [MPa], and steam quality, x, within the vapor dome.\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <function>
      <name>rhopx</name>
      <local_name>if97_rhopx</local_name>
      <params>p,x</params>
      <category>IF97 (Water Properties)</category>
      <description>Returns the mass density, rho [kg/m³], as a function of pressure, p [MPa], and steam quality, x, within the vapor dome.\nNOTE: Provide parameters without Mathcad units attached, but scaled to the units specified here.</description>
  </function>
  <!-- ********************************************************************************************************* -->
  <!-- ************************************ IF97 Unit Handling Functions *************************************** -->
  <!-- ********************************************************************************************************* -->
  <!-- The functions below are categorized separate from the raw functions above and provide the unit handling   -->
  <!-- wrapper functions within if97_Units.mcdx.  The first entry will include this units handling worksheet     -->
  <!-- the worksheet at the current cursor location.                                                             -->
  <!-- ********************************************************************************************************* -->
  <function>
    <name>Add if97_Units_IAPWS.mcdx Include File</name>
    <local_name>INCLUDE</local_name>
    <!-- If no path is provided in the filename below, CustFunc will look for it in <Mathcad Prime>"/Custom Functions/docs" -->
    <params>if97_Units_IAPWS.mcdx</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Include worksheet if97_Units.mcdx from docs directory or shared area if path is provided in XML.\nThe worksheet MUST be included in order to use the remaining functions in this category.</description>
  </function>
  <!-- ************************************************************************************************************ -->
  <!-- Below are the entries for the basic if97 thermodynamic, unit-handling functions of T & P.                    -->
  <!-- These unit-handling functions require the if97_Units.mcdx include worksheet                                  -->
  <!-- ************************************************************************************************************ -->
  <function>
    <name>Basic T,p: Specific Volume</name>
    <local_name>v.tp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the specific volume [m³/kg] as a function of T [K] and p [MPa].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Basic T,p: Density</name>
    <local_name>ρ.tp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the mass density [kg/m³] as a function of T [K] and p [MPa].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Basic T,p: Enthalpy</name>
    <local_name>h.tp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the mass enthalpy [kJ/kg] as a function of T [K] and p [MPa].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Basic T,p: Internal Energy</name>
    <local_name>u.tp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the mass internal energy [kJ/kg] as a function of T [K] and p [MPa].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Basic T,p: Entropy</name>
    <local_name>s.tp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the mass entropy [kJ/kg-K] as a function of T [K] and p [MPa].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Basic T,p: Specific Heat (Isobaric)</name>
    <local_name>C.ptp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the isobaric specific heat [kJ/kg-K] as a function of T [K] and p [MPa].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Basic T,p: Specific Heat (Isochoric)</name>
    <local_name>C.vtp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the isochoric specific heat [kJ/kg-K] as a function of T [K] and p [MPa].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Basic T,p: Speed of Sound</name>
    <local_name>w.tp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the speed of sound [m/s] as a function of T [K] and p [MPa].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Basic T,p: Viscosity (Dynamic)</name>
    <local_name>μ.tp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the dynamic viscosity [μPa-s] as a function of T [K] and p [MPa].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Basic T,p: Viscosity (Kinematic)</name>
    <local_name>ν.tp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the kinematic viscosity (μ/ρ) [m²/s] as a function of T [K] and p [MPa].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Basic T,p: Thermal Conductivity</name>
    <local_name>k.tp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the themal conductivity [W/m-K] as a function of T [K] and p [MPa].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Basic T,p: Prandtl Number</name>
    <local_name>Pr.tp</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Not an IF97 function, but calculates the dimensionless Prandtl number from (μ Cp/k).  Named after the German physicist Ludwig Prandtl, it is defined as the ratio of momentum diffusivity to thermal diffusivity.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <!-- ************************************************************************************************************ -->
  <!-- Below are the entries for the IF97 Saturation Curve as a functions of P or T.                                -->
  <!-- These unit-handling functions require the if97_Units.mcdx include worksheet.                                 -->
  <!-- ************************************************************************************************************ -->
  <function>
    <name>Saturation Curve: Saturation Temperature</name>
    <local_name>Tsat</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates saturated temperature [K] as a function of pressure, p [MPa] along the saturation curve between the triple and critical points.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation Curve: Saturation Pressure</name>
    <local_name>Psat</local_name>
    <params>T</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates saturated pressure [MPa] as a function of temperature, T [K] along the saturation curve between the triple and critical points.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <!-- ************************************************************************************************************ -->
  <!-- Below are the entries for the Saturated Vapor if97 thermodynamic, unit-handling functions of P.              -->
  <!-- These unit-handling functions require the if97_Units.mcdx include worksheet.                                 -->
  <!-- ************************************************************************************************************ -->
  <function>
    <name>Saturation: Specific Volume (Vapor)</name>
    <local_name>v.g</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated vapor specific volume [m³/kg] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Density (Vapor)</name>
    <local_name>ρ.g</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated vapor mass density [kg/m³] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Enthalpy (Vapor)</name>
    <local_name>h.g</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated vapor mass enthalpy [kJ/kg] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Internal Energy (Vapor)</name>
    <local_name>u.g</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated vapor mass internal energy [kJ/kg] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Entropy (Vapor)</name>
    <local_name>s.g</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated vapor mass entropy [kJ/kg-K] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Specific Heat [Isobaric] (Vapor)</name>
    <local_name>C.pg</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated vapor isobaric specific heat [kJ/kg-K] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Specific Heat [Isochoric] (Vapor)</name>
    <local_name>C.vg</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated vapor isochoric specific heat [kJ/kg-K] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Speed of Sound (Vapor)</name>
    <local_name>w.g</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated vapor speed of sound [m/s] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Viscosity (Dynamic - Vapor)</name>
    <local_name>μ.g</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated vapor dynamic viscosity [μPa-s] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Viscosity (Kinematic - Vapor)</name>
    <local_name>ν.g</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated vapor kinematic viscosity (μ/ρ) [m²/s] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Thermal Conductivity (Vapor)</name>
    <local_name>k.g</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated vapor themal conductivity [W/m-K] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Prandtl Number (Vapor)</name>
    <local_name>Pr.g</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Not an IF97 function, but calculates the saturated vapor Prandtl number from (μ Cp/k) as a function of pressure, p [MPa].  Named after the German physicist Ludwig Prandtl, it is defined as the ratio of momentum diffusivity to thermal diffusivity.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <!-- ************************************************************************************************************ -->
  <!-- Below are the entries for the Saturated Liquid if97 thermodynamic, unit-handling functions of P.             -->
  <!-- These unit-handling functions require the if97_Units.mcdx include worksheet.                                 -->
  <!-- ************************************************************************************************************ -->
  <function>
    <name>Saturation: Specific Volume (Liquid)</name>
    <local_name>v.f</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated liquid specific volume [m³/kg] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Density (Liquid)</name>
    <local_name>ρ.f</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated liquid mass density [kg/m³] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Enthalpy (Liquid)</name>
    <local_name>h.f</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated liquid mass enthalpy [kJ/kg] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Internal Energy (Liquid)</name>
    <local_name>u.f</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated liquid mass internal energy [kJ/kg] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Entropy (Liquid)</name>
    <local_name>s.f</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated liquid mass entropy [kJ/kg-K] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Specific Heat [Isobaric] (Liquid)</name>
    <local_name>C.pf</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated liquid isobaric specific heat [kJ/kg-K] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Specific Heat [Isochoric] (Liquid)</name>
    <local_name>C.vf</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated liquid isochoric specific heat [kJ/kg-K] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Speed of Sound (Liquid)</name>
    <local_name>w.f</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated liquid speed of sound [m/s] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Viscosity (Dynamic - Liquid)</name>
    <local_name>μ.f</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated liquid dynamic viscosity [μPa-s] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Viscosity (Kinematic - Liquid)</name>
    <local_name>ν.f</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated liquid kinematic viscosity (μ/ρ) [m²/s] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Thermal Conductivity (Liquid)</name>
    <local_name>k.f</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the saturated liquid themal conductivity [W/m-K] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation: Prandtl Number (Liquid)</name>
    <local_name>Pr.f</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Not an IF97 function, but calculates the saturated liquid Prandtl number from (μ Cp/k) as a function of pressure, p [MPa].  Named after the German physicist Ludwig Prandtl, it is defined as the ratio of momentum diffusivity to thermal diffusivity.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <!-- ************************************************************************************************************ -->
  <!-- Below are the entries for the Two-Phase if97 thermodynamic, unit-handling functions.                         -->
  <!-- These unit-handling functions require the if97_Units.mcdx include worksheet.                                 -->
  <!-- ************************************************************************************************************ -->
  <function>
    <name>Saturation 2-Phase: Density Difference, Δρ</name>
    <local_name>Δρ</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the difference (Δρ) between the saturated liquid and saturated vapor mass density [kg/m³] as a function of p [MPa] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation 2-Phase: Heat of Vaoporization, Δh</name>
    <local_name>Δh</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the difference (Δh) between the saturated vapor and saturated liquid mass enthalpy [kJ/kg] as a function of p [MPa] between the triple point and critical point. This is also known as the Heat of Vaporization, or the amount of heat required to boil 1 unit of liquid.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation 2-Phase: Surface Tension, σ</name>
    <local_name>σ</local_name>
    <params>T</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the surface tension (σ) [kg/s³] between the saturated liquid and saturated vapor as a function of T [K] between the triple point and critical point.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation 2-Phase: Morton Number, Mo</name>
    <local_name>Mo</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the dimensionles Morton Number (Mo) for saturated vapor bubbles in a continuous liquid as a function of p [MPa] between the triple point and critical point. The Morton number (Mo) is a dimensionless number used together with the Eötvös number or Bond number to characterize the shape of bubbles or drops moving in a surrounding fluid or continuous phase.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <!-- ************************************************************************************************************ -->
  <!-- Below are the entries for the Two-Phase Convenience Functions for Steam Quality.                             -->
  <!-- These unit-handling functions require the if97_Units.mcdx include worksheet.                                 -->
  <!-- ************************************************************************************************************ -->
  <function>
      <name>Saturation 2-Phase: Quality (P,H)</name>
      <local_name>X.ph</local_name>
      <params>p,h</params>
      <category>IF97 (Water Properties) w/ Units</category>
      <description>This convenience function returns the steam quality, x, as a function of pressure, p [MPa], and mass enthalpy, h [kJ/kg].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
      <name>Saturation 2-Phase: Quality (P,U)</name>
      <local_name>X.pu</local_name>
      <params>p,u</params>
      <category>IF97 (Water Properties) w/ Units</category>
      <description>This convenience function returns the steam quality, x, as a function of pressure, p [MPa], and internal energy, u [kJ/kg].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
      <name>Saturation 2-Phase: Quality (P,S)</name>
      <local_name>X.ps</local_name>
      <params>p,s</params>
      <category>IF97 (Water Properties) w/ Units</category>
      <description>This convenience function returns the steam quality, x, as a function of pressure, p [MPa], and mass entropy, s [kJ/kg-K].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
      <name>Saturation 2-Phase: Quality (P,ρ)</name>
      <local_name>X.pρ</local_name>
      <params>p,ρ</params>
      <category>IF97 (Water Properties) w/ Units</category>
      <description>This convenience function returns the steam quality, x, as a function of pressure, p [MPa], and mass density, ρ [kg/m³].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
      <name>Saturation 2-Phase: Quality (P,v)</name>
      <local_name>X.pv</local_name>
      <params>p,v</params>
      <category>IF97 (Water Properties) w/ Units</category>
      <description>This convenience function returns the steam quality, x, as a function of pressure, p [MPa], and specific volumne, v [m³/kg].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation 2-Phase: Enthalpy (P,X)</name>
    <local_name>h.px</local_name>
    <params>p,x</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>This convenience function returns the mass enthalpy, h [kJ/kg], as a function of pressure, p [MPa], and steam quality, x.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation 2-Phase: Energy (P,X)</name>
    <local_name>u.px</local_name>
    <params>p,x</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>This convenience function returns the internal energy, u [kJ/kg], as a function of pressure, p [MPa], and steam quality, x.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation 2-Phase: Entropy (P,X)</name>
    <local_name>s.px</local_name>
    <params>p,x</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>This convenience function returns the mass entropy, s [kJ/kg-K], as a function of pressure, p [MPa], and steam quality, x.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Saturation 2-Phase: Density (P,X)</name>
    <local_name>ρ.px</local_name>
    <params>p,x</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>This convenience function returns the mass density, ρ [kg/m³], as a function of pressure, p [MPa], and steam quality, x.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
      <name>Saturation 2-Phase: Volume (P,x)</name>
      <local_name>v.px</local_name>
      <params>p,x</params>
      <category>IF97 (Water Properties) w/ Units</category>
      <description>This convenience function returns the specific volumne, v [m³/kg], as a function of pressure, p [MPa], and steam quality, x.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <!-- ********************************************************************** -->
  <!-- Below are the entries for the If97 thermodynamic constants with units. -->
  <!-- These constants are defined in the if97_Units.mcdx include worksheet.  -->
  <!-- ********************************************************************** -->
  <function>
    <name>Constants: Molecular Weight</name>
    <local_name>MW.H2O</local_name>
    <params>const</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Returns molecular weight for water [gm/mol] or [kg/kmol] as defined in the "IAPWS Guideline on the Use of Fundamental Physical Constants and Basic Constants of Water, 2001".\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Constants: Ideal Gas, R (mass-based)</name>
    <local_name>R.g</local_name>
    <params>const</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Returns the mass-based Ideal Gas Constant for water [kJ/kg-K] as defined in "IAPWS-IF97".\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Constants: Ideal Gas, R (mole-based)</name>
    <local_name>R.gm</local_name>
    <params>const</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Returns the mole-based Ideal Gas Constant for water [kJ/kmol-K] as defined in "IAPWS-IF97".\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Constants: Triple Point Temperature</name>
    <local_name>T.t</local_name>
    <params>const</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Returns the Temperature [K] at the triple point for water as defined in "IAPWS-IF97".\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Constants: Triple Point Pressure</name>
    <local_name>P.t</local_name>
    <params>const</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Returns the Pressure [MPa] at the triple point for water as defined in "IAPWS-IF97".\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Constants: Critical Temperature</name>
    <local_name>T.c</local_name>
    <params>const</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Returns the Temperature [K] at the critical point for water as defined in "IAPWS-IF97".\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Constants: Critical Pressure</name>
    <local_name>P.c</local_name>
    <params>const</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Returns the Pressure [MPa] at the critical point for water as defined in "IAPWS-IF97".\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Constants: Critical Density</name>
    <local_name>ρ.c</local_name>
    <params>const</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Returns the Density [kg/m³] at the critical point for water as defined in "IAPWS-IF97".\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Constants: Maximum Temperature</name>
    <local_name>T.max</local_name>
    <params>const</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Returns the Maximum Temperature Limit [K] bounding regions 1-3 as defined in "IAPWS-IF97".\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Constants: Maximum Pressure</name>
    <local_name>P.max</local_name>
    <params>const</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Returns the Maximum Pressure Limit [MPa] bounding regions 1-3 as defined in "IAPWS-IF97".\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <!-- ********************************************************************** -->
  <!-- Supplemental IF97 Functions - Provided for Verification Purposes.      -->
  <!-- ********************************************************************** -->
  <function>
    <name>Supplemental: R23 Boundary Temperature</name>
    <local_name>T.B</local_name>
    <params>p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates temperature, T [K] as a function of pressure, p [MPa] along the boundary between IF97 Regions 2 and 3.  Used for verification purposes.  (16.5192 MPa ≤ P ≤ 100 MPa).\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Supplemental: R23 Boundary Pressure</name>
    <local_name>P.B</local_name>
    <params>T</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates pressure, p [MPa] as a function of temperature, T [K] along the boundary between IF97 Regions 2 and 3.  Used for verification purposes.  (623.15K ≤ T ≤ 863.15 K).\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Supplemental: Thermal Expansion Coeff.</name>
    <local_name>β</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Not an IF97 function, but calculates the thermal expansion coefficient, β [1/K] as a function of temperature, T [K] and pressure, p [MPa]. Evaluated from density using -1/ρ*(dρ/dT) with Mathcad's derivative function.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Supplemental: Isentropic Expansion Factor</name>
    <local_name>γ</local_name>
    <params>T,p</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Not an IF97 function, but calculates the dimensionless Isentropic Expansion Factor, γ as a function of temperature, T [K] and pressure, p [MPa] from the ratio of the isobaric to isochoric specific heats (Cp/Cv).\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Supplemental: Region Determination (p,h)</name>
    <local_name>R</local_name>
    <params>p,h</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Not an IF97 function, but determines the IF97 equation region (1-5) for input pressure, p [MPa], and enthalpy, h [kJ/kg]. Used for verification purposes.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Supplemental: Region Determination (p,s)</name>
    <local_name>R</local_name>
    <params>p,s</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Not an IF97 function, but determines the IF97 equation region (1-5) for input pressure, p [MPa], and entropy, s [kJ/kg-K]. Used for verification purposes.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Supplemental: Viscosity (T,ρ)</name>
    <local_name>μ.tρ</local_name>
    <params>T,ρ</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the dynamic viscosity, μ [Pa-s] as a function of T [K] and ρ [kg/m³].  These are the actual inputs for the published IAPWS Viscosity equations.  While functions of temperature, T, and pressure, p, are provided here, they have to first calculate density from T and p before calling this function. This function is provided for direct verification purposes.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <!-- ************************************************************************************************ -->
  <!-- Below are the unit aware, Reverse IF97 functions of (P,h), (P,s), or (h,s).                      -->
  <!-- ************************************************************************************************ -->
  <function>
    <name>Reverse: Temperature (p,h)</name>
    <local_name>T.ph</local_name>
    <params>p,h</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the temperature, T [K], as a function of pressure, p [MPa] and mass enthalpy, h [kJ/kg].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Reverse: Temperature (p,s)</name>
    <local_name>T.ps</local_name>
    <params>p,s</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the temperature, T [K], as a function of pressure, p [MPa], and mass entropy, s [kJ/kg-K].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Reverse: Density (p,s)</name>
    <local_name>ρ.ph</local_name>
    <params>p,h</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates mass density, ρ [kg/m³], as a function of the pressure, p [MPa], and mass entropy, s [kJ/kg-K].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Reverse: Entropy (p,h)</name>
    <local_name>S.ph</local_name>
    <params>p,h</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates mass entropy, s [kJ/kg-K], as a function of the pressure, p [MPa], and mass enthalpy, h [kJ/kg].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Reverse: Temperature (h,s)</name>
    <local_name>T.hs</local_name>
    <params>h,s</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the temperature, T [K], as a function of mass enthalpy, h [kJ/kg], and mass entropy, s [kJ/kg-K].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Reverse: Pressure (h,s)</name>
    <local_name>P.hs</local_name>
    <params>h,s</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates the pressure, p [MPa], as a function of mass enthalpy, h [kJ/kg], and mass entropy, s [kJ/kg-K].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Reverse: Enthalpy (p,s)</name>
    <local_name>T.ph</local_name>
    <params>p,h</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates mass enthalpy, h [kJ/kg], as a function of the pressure, p [MPa], and mass entropy, s [kJ/kg-K].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Reverse: Entropy (p,h)</name>
    <local_name>S.ph</local_name>
    <params>p,h</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Calculates mass entropy, s [kJ/kg-K], as a function of the pressure, p [MPa], and mass enthalpy, h [kJ/kg].\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Reverse: Aux. Max. Enthalpy (s)</name>
    <local_name>H.max</local_name>
    <params>s</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Obtains Enthalpy, h [J/kg], values along the Pmax and Tmax boundaries as a function of Entropy, s [J/kg-K].  This function is used internally for bounds checking of reverse functions without iteration, but is provided for verificastion purposes.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Reverse: Aux. Min. Enthalpy (s)</name>
    <local_name>H.min</local_name>
    <params>s</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Obtains Enthalpy, h [J/kg], values along the Pmin Boundary as a function of Entropy, s [J/kg-K].  This function is used internally for bounds checking of reverse functions without iteration, but is provided for verificastion purposes.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Reverse: Aux. Sat. Enthalpy (s)</name>
    <local_name>H.sat</local_name>
    <params>s</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Obtains Enthalpy, h [J/kg], values along the saturation curves as a function of Entropy, s [J/kg-K]. This is a unified function that covers the 4 saturation curve segments around the vapor dome, based on the value of s. This function is used internally for bounds checking of reverse functions without iteration, but is provided for verificastion purposes.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Reverse: Aux. Enthalpy 1-3 (s)</name>
    <local_name>H.13</local_name>
    <params>s</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Obtains Enthalpy [J/kg] values Region 1-3 boundary as a function of Entropy [J/kg-K].  This function is used internally for bounds checking of reverse functions without iteration, but is provided for verificastion purposes.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
  <function>
    <name>Reverse: Aux. Enthalpy 2a-2b (s)</name>
    <local_name>H.2ab</local_name>
    <params>s</params>
    <category>IF97 (Water Properties) w/ Units</category>
    <description>Obtains Enthalpy [J/kg] values Region 2a-2b boundary (const. p = 4 [MPa]) as a function of Entropy [J/kg-K].  This function is used internally for bounds checking of reverse functions without iteration, but is provided for verificastion purposes.\nNOTE: Mathcad units handling on inputs and return value - included in "if97_Units.mcdx".</description>
  </function>
</FUNCTIONS>
